1) Abra o Oracle SQL Developer conectado ao banco de dados local e crie uma nova janela de script vazio.

2) Execute os comandos abaixo para criar uma nova tabela:

CREATE TABLE TAB_IDENTITY
(
ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
, DESCRITOR VARCHAR(20)
, PRIMARY KEY (ID)
);

3) Para mostrar o conteúdo da tabela, execute:

SELECT * FROM TAB_IDENTITY;

4) Para inserir linhas na tabela, execute:

INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 1');
INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 2');
INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 3');

5) Para apagar uma linha na tabela, execute:

DELETE FROM TAB_IDENTITY WHERE ID = 2;

6) Inclua uma linha na tabela:

INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 4');

7) Verifique o conteúdo da tabela com um SELECT.

8) Apague uma linha e crie outra na tabela:

DELETE FROM TAB_IDENTITY WHERE ID = 4;
INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 5');

9) Com o comando SELECT, verifique o conteúdo da tabela.

10) Inclua a linha com CLIENTE 7:

INSERT INTO TAB_IDENTITY (ID, DESCRITOR) VALUES (7, 'CLIENTE 7');

11) Verifique a tabela.

12) Agora inclua como CLIENTE 6:

INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 6');

13) Inclua o CLIENTE 7A:

INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 7A');

14) Verifique como ficou a tabela, executando o comando:

SELECT * FROM TAB_IDENTITY;

15) Apague o ID 7 e inclua o CLIENTE 7A:

DELETE FROM TAB_IDENTITY WHERE ID = 7;
INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 7A');

16) Inclua uma linha com o ID 2 do CLIENTE 2:

INSERT INTO TAB_IDENTITY (ID, DESCRITOR) VALUES (2, 'CLIENTE 2');

17) Inclua uma linha para o CLIENTE 9:

INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE 9');

18) Inclua o CLIENTE 10. usando o ID como NULL:

INSERT INTO TAB_IDENTITY (ID, DESCRITOR) VALUES (NULL, 'CLIENTE 10');

19) Crie a tabela TAB_PADRAO:

CREATE TABLE TAB_PADRAO
(
ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
, DESCRITOR VARCHAR(20) NOT NULL
, ENDERECO VARCHAR(100) NULL
, CIDADE VARCHAR(50) DEFAULT ON NULL 'Rio de Janeiro'
, DATA_CRIACAO DATE DEFAULT ON NULL SYSDATE
, PRIMARY KEY (ID)
);

20) Insira uma linha:

INSERT INTO TAB_PADRAO (DESCRITOR, ENDERECO, CIDADE, DATA_CRIACAO)
VALUES ('CLIENTE 1','RUA DO COMERCIO','SAO PAULO', TO_DATE('2022-01-01','YYYY-MM-DD'));

21) Mostre o conteúdo da tabela:

SELECT * FROM TAB_PADRAO;

22) Insira uma linha com este comando:

INSERT INTO TAB_PADRAO (DESCRITOR) VALUES ('CLIENTE 2');

23) Veja como a tabela ficou.

24) Apague o conteúdo das tabelas:

DELETE FROM ITENS_NOTAS;
DELETE FROM NOTAS;

25) Busque o conteúdo das tabelas:

SELECT * FROM CLIENTES;
-- 1471156710
SELECT * FROM VENDEDORES;
-- 235
SELECT * FROM PRODUTOS;
-- 1000889
SELECT * FROM NOTAS;

26) Insira uma linha, executando o comando:

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('001',TO_DATE('2019-01-01','YYYY-MM-DD'), '1471156710', '235', 0.1);

27) Insira uma linha, executando o comando:

INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('001','1000889',10,10);

28) Insira linhas nas tabelas, executando os comandos:

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('002',TO_DATE('2019-01-01','YYYY-MM-DD'), '1471156710', '235', 0.1);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('002','1000889',15,10);

29) Insira agora as seguintes linhas:

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('003',TO_DATE('2019-01-02','YYYY-MM-DD'), '1471156710', '235', 0.1);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('003','1000889',18,10);

30) Mostre o conteúdo das tabelas:

SELECT * FROM NOTAS;
SELECT * FROM ITENS_NOTAS;

31) Faça a seleção com INNER JOIN:

SELECT
N.DATA_VENDA, SUM(ITN.QUANTIDADE * ITN.PRECO) AS FATURAMENTO
FROM
NOTAS N
INNER JOIN
ITENS_NOTAS ITN
ON N.NUMERO = ITN.NUMERO
GROUP BY N.DATA_VENDA;

32) Crie a tabela TAB_FATURAMENTO:

CREATE TABLE TAB_FATURAMENTO (DATA_VENDA DATE NULL, FATURAMENTO FLOAT);

33) Insira na tabela TAB_FATURAMENTO:

INSERT INTO TAB_FATURAMENTO
SELECT
N.DATA_VENDA, SUM(ITN.QUANTIDADE * ITN.PRECO) AS FATURAMENTO
FROM
NOTAS N
INNER JOIN
ITENS_NOTAS ITN
ON N.NUMERO = ITN.NUMERO
GROUP BY N.DATA_VENDA;

34) Mostre o conteúdo da tabela:

SELECT * FROM TAB_FATURAMENTO;

35) Insira na tabela NOTAS:

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('004',TO_DATE('2019-01-02','YYYY-MM-DD'), '1471156710', '235', 0.1);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('004','1000889',21,10);

36) Insira na tabela TAB_FATURAMENTO:

DELETE FROM TAB_FATURAMENTO;
INSERT INTO TAB_FATURAMENTO
SELECT
N.DATA_VENDA, SUM(ITN.QUANTIDADE * ITN.PRECO) AS FATURAMENTO
FROM
NOTAS N
INNER JOIN
ITENS_NOTAS ITN
ON N.NUMERO = ITN.NUMERO
GROUP BY N.DATA_VENDA;

37) Crie um script novo para montar uma TRIGGER com o comando:

CREATE TRIGGER TG_TAB_FATURAMENTO
AFTER INSERT ON ITENS_NOTAS
BEGIN
DELETE FROM TAB_FATURAMENTO;
INSERT INTO TAB_FATURAMENTO
SELECT
N.DATA_VENDA, SUM(ITN.QUANTIDADE * ITN.PRECO) AS FATURAMENTO
FROM
NOTAS N
INNER JOIN
ITENS_NOTAS ITN
ON N.NUMERO = ITN.NUMERO
GROUP BY N.DATA_VENDA;
END;

38) Insira na tabela NOTAS:

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('006',TO_DATE('2019-01-03','YYYY-MM-DD'), '1471156710', '235', 0.1);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('006','1000889',40,10);

39) Crie um novo script e mostre o conteúdo das tabelas:

SELECT * FROM TAB_FATURAMENTO;
SELECT * FROM NOTAS;

40) Altere a linha da tabela:

UPDATE ITENS_NOTAS SET QUANTIDADE = 1000 WHERE NUMERO = '005';

41) Apague o item 005 das tabelas :

DELETE FROM ITENS_NOTAS WHERE NUMERO = '005';
DELETE FROM NOTAS WHERE NUMERO = '005';

42) Mostre o conteúdo da tabela:

CREATE OR REPLACE TRIGGER TG_TAB_FATURAMENTO
AFTER INSERT OR UPDATE OR DELETE ON ITENS_NOTAS
BEGIN
DELETE FROM TAB_FATURAMENTO;
INSERT INTO TAB_FATURAMENTO
SELECT
N.DATA_VENDA, SUM(ITN.QUANTIDADE * ITN.PRECO) AS FATURAMENTO
FROM
NOTAS N
INNER JOIN
ITENS_NOTAS ITN
ON N.NUMERO = ITN.NUMERO
GROUP BY N.DATA_VENDA;
END;

43) Insira os registros:

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('007',TO_DATE('2019-01-03','YYYY-MM-DD'), '1471156710', '235', 0.1);
INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('007','1000889',40,10);

44) Mostre o conteúdo da tabela:

SELECT * FROM TAB_FATURAMENTO;

45) Altere o conteúdo do registro:

UPDATE ITENS_NOTAS SET QUANTIDADE = 1000 WHERE NUMERO = '007';

46) Apague as linhas com 007 das tabelas:

DELETE FROM ITENS_NOTAS WHERE NUMERO = '007';
DELETE FROM NOTAS WHERE NUMERO = '007';

